{
  "extras": {},
  "openapi": {
    "components": {
      "parameters": {
        "checked": {
          "description": "Filter notification by checked field.\nWhen checked: true returns only checked notifications.\nWhen checked: false returns only NOT checked notifications.\nWhen left empty returns all notification.",
          "in": "query",
          "name": "checked",
          "required": false,
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "created_after": {
          "description": "Restrict results to all records created after the given date.",
          "in": "query",
          "name": "created_after",
          "required": false,
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "created_before": {
          "description": "Restrict results to all records created before the given date.",
          "in": "query",
          "name": "created_before",
          "required": false,
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "creator_id": {
          "description": "The public id of a creator of an Incident",
          "in": "query",
          "name": "creator_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "event_id": {
          "description": "The id of an Event",
          "in": "path",
          "name": "event_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "event_type": {
          "description": "Comma separated list of event types to display",
          "in": "query",
          "name": "event_type",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "follow_up_status": {
          "description": "Comma separated list of incident statuses.\ndone: done == true\nopen: done == false\narchived: archived == true\n\"\": default value, archived = false\nBy default you wont get any archived follow ups, but you can explicitly tell that you want archived.\nMultiple value create disjunction.\n\"done,archived\" -> done OR archived\n\"done,open\" -> \"done OR not done\" -> \"not archived\"",
          "in": "query",
          "name": "follow_up_status",
          "required": false,
          "schema": {
            "default": "",
            "type": "string"
          }
        },
        "follow_up_status_rep": {
          "description": "Textual value of the follow up status.\nE.g. open, done, archived",
          "in": "query",
          "name": "follow_up_status",
          "required": false,
          "schema": {
            "default": "",
            "type": "string"
          }
        },
        "from": {
          "description": "Restrict results to all records created after the given date.",
          "in": "query",
          "name": "from",
          "required": false,
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "id": {
          "description": "The id of record",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "incident_commander_id": {
          "description": "Comma separated list of incident commander ids",
          "in": "query",
          "name": "incident_commander_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "incident_id": {
          "description": "The id of an Incident",
          "in": "path",
          "name": "incident_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "incident_name": {
          "description": "Keyword for case insensitive search of the incident id or the incident summary.",
          "in": "query",
          "name": "incident_name",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "invalid": {
          "description": "true restricts output to only invalid incidents and omits incident details from reporting, false restricts output to real valid incidents and includes incident details in reporting. No value or nil means all incidents.",
          "in": "query",
          "name": "invalid",
          "required": false,
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "mine": {
          "description": "If true, restricts output to records owned by the requesting user.",
          "in": "query",
          "name": "mine",
          "required": false,
          "schema": {
            "default": false,
            "type": "boolean"
          }
        },
        "note": {
          "description": "Keyword for case insensitive search of the note of an Event.",
          "in": "query",
          "name": "note",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "occurred_after": {
          "description": "Restrict results to all records occurred after the given date.",
          "in": "query",
          "name": "occurred_after",
          "required": false,
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "occurred_before": {
          "description": "Restrict results to all records occurred before the given date.",
          "in": "query",
          "name": "occurred_before",
          "required": false,
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "on_call_id": {
          "description": "the on-call person of an Incident",
          "in": "query",
          "name": "on_call_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "order_by": {
          "description": "Specifies the order by criteria. The syntax of this parameter is\nsimilar to the syntax of the _order by_ clause of an SQL statement.\nWe support ordering by these fields:\n- id\n- incident_id\n- name\n- email\n- username\n- status\n- severity\n- product\n- last_updated\n- summary\n- created_at\n- working_time\n\n\n\n```sql\nname asc\n```\n\nOr in order to retrieve all incidents ordered by username _and_ email:\n\n```sql\nname asc, email asc\n```\n\nIf the parameter isn't provided, or if the value is empty, then\nno explicit ordering will be applied.",
          "in": "query",
          "name": "order_by",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "page": {
          "description": "Page number of record list when record list exceeds specified page size",
          "in": "query",
          "name": "page",
          "required": false,
          "schema": {
            "default": 1,
            "minimum": 1,
            "type": "integer"
          }
        },
        "participant_id": {
          "description": "the id of a user participating in an Incident, regardless of role",
          "in": "query",
          "name": "participant_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "pinned": {
          "description": "true restricts output to only events which have been pinned false restricts output to only events which have not been pinned. No value or nil means all events.",
          "in": "query",
          "name": "pinned",
          "required": false,
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "private": {
          "description": "true restricts output to private incidents, false restricts output to public incidents. No value or nil means all incidents.",
          "in": "query",
          "name": "private",
          "required": false,
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "product_id": {
          "description": "Comma separated list of product ids",
          "in": "query",
          "name": "product_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "products": {
          "description": "comma separated list of products",
          "in": "query",
          "name": "products",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "public_id": {
          "description": "The public id of an Incident",
          "in": "query",
          "name": "public_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "responsible_manager_id": {
          "description": "the manager responsible for an Incident",
          "in": "query",
          "name": "responsible_manager_id",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "search": {
          "description": "Search string for searching records. In case of users it's matched\nagainst Name, Username and Email fields.",
          "in": "query",
          "name": "search",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "show_system_events": {
          "description": "Filter events by show_system_events field.\nWhen show_system_events: true returns only system events.\nWhen show_system_events: false returns only non-system events.\nWhen left empty returns all events.",
          "in": "query",
          "name": "show_system_events",
          "required": false,
          "schema": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "size": {
          "description": "Maximum number of records to return",
          "in": "query",
          "name": "size",
          "required": false,
          "schema": {
            "default": 100,
            "minimum": 0,
            "type": "integer"
          }
        },
        "status": {
          "description": "Comma separated list of incident statuses",
          "in": "query",
          "name": "status",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "to": {
          "description": "Restrict results to all records created before the given date.",
          "in": "query",
          "name": "to",
          "required": false,
          "schema": {
            "format": "date-time",
            "type": "string"
          }
        },
        "user_id": {
          "description": "The id of a User",
          "in": "path",
          "name": "user_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      },
      "schemas": {
        "Attachment": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "content_type": {
                  "type": "string"
                },
                "creator": {
                  "$ref": "#/components/schemas/User"
                },
                "data": {
                  "format": "byte",
                  "type": "string"
                },
                "event": {
                  "$ref": "#/components/schemas/ObjectReference"
                },
                "file_size": {
                  "format": "int64",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "sha1_sum": {
                  "format": "byte",
                  "type": "string"
                },
                "slack_file_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "AttachmentList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Attachment"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "AttachmentPatchRequest": {
          "properties": {
            "content_type": {
              "type": "string"
            },
            "data": {
              "format": "byte",
              "type": "string"
            }
          },
          "type": "object"
        },
        "Error": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "code": {
                  "type": "string"
                },
                "operation_id": {
                  "type": "string"
                },
                "reason": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "ErrorList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "Escalation": {
          "allOf": [
            {
              "properties": {
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "type": "object"
            }
          ]
        },
        "EscalationList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Escalation"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "Event": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "attachments": {
                  "items": {
                    "$ref": "#/components/schemas/Attachment"
                  },
                  "type": "array"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "creator": {
                  "$ref": "#/components/schemas/User"
                },
                "escalation": {
                  "$ref": "#/components/schemas/Escalation"
                },
                "event_type": {
                  "type": "string"
                },
                "external_reference": {
                  "$ref": "#/components/schemas/ExternalReference"
                },
                "follow_up": {
                  "$ref": "#/components/schemas/FollowUp"
                },
                "follow_up_change": {
                  "$ref": "#/components/schemas/FollowUpChange"
                },
                "incident": {
                  "$ref": "#/components/schemas/ObjectReference"
                },
                "metadata": {
                  "type": "object"
                },
                "note": {
                  "type": "string"
                },
                "occurred_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "pinned": {
                  "type": "boolean"
                },
                "pinned_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "slack_message_timestamp": {
                  "type": "string"
                },
                "status_change": {
                  "$ref": "#/components/schemas/StatusChange"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "EventList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Event"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "EventPatchRequest": {
          "properties": {
            "note": {
              "type": "string"
            },
            "occurred_at": {
              "format": "date-time",
              "type": "string"
            },
            "pinned": {
              "type": "boolean"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ExternalReference": {
          "allOf": [
            {
              "properties": {
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "FollowUp": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "archived": {
                  "type": "boolean"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "done": {
                  "type": "boolean"
                },
                "follow_up_type": {
                  "type": "string"
                },
                "incident": {
                  "$ref": "#/components/schemas/ObjectReference"
                },
                "issue_created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "owner": {
                  "type": "string"
                },
                "priority": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "FollowUpChange": {
          "allOf": [
            {
              "properties": {
                "follow_up_id": {
                  "format": "uuid",
                  "type": "string"
                },
                "status": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          ]
        },
        "FollowUpList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/FollowUp"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "FollowUpPatchRequest": {
          "properties": {
            "archived": {
              "type": "boolean"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "Incident": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "ansible_playbook": {
                  "type": "string"
                },
                "bad_rollout_commit": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "creator": {
                  "$ref": "#/components/schemas/User"
                },
                "description": {
                  "type": "string"
                },
                "executive_summary": {
                  "type": "string"
                },
                "external_coordination": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "impacted_products": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "incident_commander": {
                  "$ref": "#/components/schemas/User"
                },
                "incident_id": {
                  "type": "string"
                },
                "incident_owner": {
                  "$ref": "#/components/schemas/User"
                },
                "incident_type": {
                  "type": "string"
                },
                "invalid": {
                  "nullable": true,
                  "type": "boolean"
                },
                "jira_epic_link": {
                  "type": "string"
                },
                "last_opened_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "metadata": {
                  "nullable": true,
                  "type": "object"
                },
                "on_call_person": {
                  "$ref": "#/components/schemas/User"
                },
                "participants": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array"
                },
                "post_mortem_review": {
                  "type": "string"
                },
                "primary_team": {
                  "type": "string"
                },
                "private": {
                  "nullable": true,
                  "type": "boolean"
                },
                "product_engineering_lead": {
                  "$ref": "#/components/schemas/User"
                },
                "product_manager": {
                  "$ref": "#/components/schemas/User"
                },
                "product_owner": {
                  "$ref": "#/components/schemas/User"
                },
                "products": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "reopen_counter": {
                  "format": "int64",
                  "type": "integer"
                },
                "resolved_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "responsible_manager": {
                  "$ref": "#/components/schemas/User"
                },
                "scribe": {
                  "$ref": "#/components/schemas/User"
                },
                "severity": {
                  "type": "string"
                },
                "slack_channel_id": {
                  "type": "string"
                },
                "slack_team_id": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "summary": {
                  "type": "string"
                },
                "task_runs": {
                  "items": {
                    "$ref": "#/components/schemas/IncidentTaskRun"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "viewers": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array"
                },
                "working_time": {
                  "format": "int64",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          ]
        },
        "IncidentDebrief": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "google_doc_error": {
                  "type": "string"
                },
                "google_doc_link": {
                  "type": "string"
                },
                "google_doc_status": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "IncidentList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Incident"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "IncidentPatchRequest": {
          "properties": {
            "bad_rollout_commit": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "executive_summary": {
              "type": "string"
            },
            "external_coordination": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "impacted_products": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "incident_commander": {
              "$ref": "#/components/schemas/ObjectReference"
            },
            "incident_owner": {
              "$ref": "#/components/schemas/ObjectReference"
            },
            "incident_type": {
              "type": "string"
            },
            "invalid": {
              "type": "boolean"
            },
            "jira_epic_link": {
              "type": "string"
            },
            "on_call_person": {
              "$ref": "#/components/schemas/ObjectReference"
            },
            "post_mortem_review": {
              "type": "string"
            },
            "primary_team": {
              "type": "string"
            },
            "private": {
              "type": "boolean"
            },
            "product_engineering_lead": {
              "$ref": "#/components/schemas/ObjectReference"
            },
            "product_manager": {
              "$ref": "#/components/schemas/ObjectReference"
            },
            "product_owner": {
              "$ref": "#/components/schemas/ObjectReference"
            },
            "products": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "responsible_manager": {
              "$ref": "#/components/schemas/ObjectReference"
            },
            "scribe": {
              "$ref": "#/components/schemas/ObjectReference"
            },
            "severity": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "summary": {
              "type": "string"
            },
            "viewers": {
              "items": {
                "$ref": "#/components/schemas/User"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "IncidentRetrospective": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "deleted": {
                  "type": "boolean"
                },
                "google_doc_error": {
                  "type": "string"
                },
                "google_doc_link": {
                  "type": "string"
                },
                "google_doc_status": {
                  "type": "string"
                },
                "google_pdf_error": {
                  "type": "string"
                },
                "google_pdf_link": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "IncidentRetrospectivePatchRequest": {
          "properties": {
            "locked": {
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "IncidentTaskRun": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "ansible_playbook": {
                  "type": "string"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "parameters": {
                  "nullable": true,
                  "type": "object"
                },
                "result": {
                  "nullable": true,
                  "type": "object"
                },
                "status": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "IncidentTaskRunList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/IncidentTaskRun"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "List": {
          "properties": {
            "kind": {
              "type": "string"
            },
            "page": {
              "type": "integer"
            },
            "size": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            }
          },
          "required": [
            "kind",
            "page",
            "size",
            "total",
            "items"
          ],
          "type": "object"
        },
        "Notification": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "checked": {
                  "type": "boolean"
                },
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "incident": {
                  "$ref": "#/components/schemas/ObjectReference"
                },
                "name": {
                  "type": "string"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "NotificationList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Notification"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "NotificationPatchRequest": {
          "properties": {
            "checked": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "place_after": {
              "description": "HEAD - place on the top, <notificationID> - place after this notification",
              "type": "string"
            }
          },
          "type": "object"
        },
        "ObjectReference": {
          "properties": {
            "href": {
              "type": "string"
            },
            "id": {
              "format": "uuid",
              "type": "string"
            },
            "kind": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "Playbook": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "PlaybookList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "$ref": "#/components/schemas/Playbook"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "Report": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "supported_parameters": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "ReportList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Report"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "SlackLinkInfo": {
          "allOf": [
            {
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "redirect_uri": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "SlackUser": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "channel_id": {
                  "type": "string"
                },
                "nonce": {
                  "type": "string"
                },
                "slack_id": {
                  "type": "string"
                },
                "team_id": {
                  "type": "string"
                },
                "team_name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "StatusChange": {
          "allOf": [
            {
              "properties": {
                "status": {
                  "type": "object"
                },
                "status_id": {
                  "format": "uuid",
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "User": {
          "allOf": [
            {
              "$ref": "#/components/schemas/ObjectReference"
            },
            {
              "properties": {
                "created_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "slack_users": {
                  "items": {
                    "$ref": "#/components/schemas/SlackUser"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "format": "date-time",
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "UserList": {
          "allOf": [
            {
              "$ref": "#/components/schemas/List"
            },
            {
              "properties": {
                "items": {
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/User"
                      }
                    ]
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          ]
        },
        "WebsocketAuthToken": {
          "allOf": [
            {
              "properties": {
                "incident_id": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                },
                "user_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        }
      },
      "securitySchemes": {
        "Bearer": {
          "bearerFormat": "JWT",
          "scheme": "bearer",
          "type": "http"
        }
      }
    },
    "info": {
      "description": "Web-RCA Service API",
      "title": "Web-RCA Service API",
      "version": "0.0.1"
    },
    "openapi": "3.0.0",
    "paths": {
      "/api/web-rca/v1/errors": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorList"
                  }
                }
              },
              "description": "A JSON array or errors"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "summary": "Returns a list of errors"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ]
      },
      "/api/web-rca/v1/errors/{id}": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Error found by id"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No error with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "summary": "Get an error by id"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ]
      },
      "/api/web-rca/v1/incidents": {
        "get": {
          "parameters": [
            {
              "$ref": "#/components/parameters/page"
            },
            {
              "$ref": "#/components/parameters/size"
            },
            {
              "$ref": "#/components/parameters/order_by"
            },
            {
              "$ref": "#/components/parameters/search"
            },
            {
              "$ref": "#/components/parameters/public_id"
            },
            {
              "$ref": "#/components/parameters/creator_id"
            },
            {
              "$ref": "#/components/parameters/incident_commander_id"
            },
            {
              "$ref": "#/components/parameters/product_id"
            },
            {
              "$ref": "#/components/parameters/on_call_id"
            },
            {
              "$ref": "#/components/parameters/responsible_manager_id"
            },
            {
              "$ref": "#/components/parameters/participant_id"
            },
            {
              "$ref": "#/components/parameters/mine"
            },
            {
              "$ref": "#/components/parameters/status"
            },
            {
              "$ref": "#/components/parameters/incident_name"
            },
            {
              "$ref": "#/components/parameters/private"
            },
            {
              "$ref": "#/components/parameters/invalid"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IncidentList"
                  }
                }
              },
              "description": "A JSON array of incident objects"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return a list of Incidents"
        },
        "post": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            },
            "description": "Incident data",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              },
              "description": "Created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "409": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Incident already exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred creating the Incident"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Create a new Incident"
        }
      },
      "/api/web-rca/v1/incidents/{id}": {
        "delete": {
          "responses": {
            "204": {
              "description": "Incident successfully deleted"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Incident with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred deleting the Incident"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Delete an Incident"
        },
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              },
              "description": "Incident found by id"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Incident with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get an Incident by id"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "patch": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentPatchRequest"
                }
              }
            },
            "description": "Incident data",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              },
              "description": "Incident updated successfully"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Incident with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error updating Incident"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Update an Incident"
        }
      },
      "/api/web-rca/v1/incidents/{id}/debrief": {
        "delete": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "responses": {
            "204": {
              "description": "incident debrief successfully deleted"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No incident debrief with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred deleting the incident debrief"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Delete an incident debrief"
        },
        "get": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IncidentDebrief"
                  }
                }
              },
              "description": "Incident debrief object"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Incident with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get the incident debrief for the incident"
        },
        "post": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDebrief"
                }
              }
            },
            "description": "Event data",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IncidentDebrief"
                  }
                }
              },
              "description": "Created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred creating the incident debrief"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Start a new incident debrief"
        }
      },
      "/api/web-rca/v1/incidents/{id}/events": {
        "get": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            },
            {
              "$ref": "#/components/parameters/page"
            },
            {
              "$ref": "#/components/parameters/size"
            },
            {
              "$ref": "#/components/parameters/order_by"
            },
            {
              "$ref": "#/components/parameters/note"
            },
            {
              "$ref": "#/components/parameters/created_after"
            },
            {
              "$ref": "#/components/parameters/created_before"
            },
            {
              "$ref": "#/components/parameters/occurred_after"
            },
            {
              "$ref": "#/components/parameters/occurred_before"
            },
            {
              "$ref": "#/components/parameters/show_system_events"
            },
            {
              "$ref": "#/components/parameters/event_type"
            },
            {
              "$ref": "#/components/parameters/pinned"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EventList"
                  }
                }
              },
              "description": "A JSON array of Event objects"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Incident with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get Events in given Incident by Incident id"
        },
        "post": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "description": "Event data",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              },
              "description": "Created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred creating the Event"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Create a new Event under the Incident"
        }
      },
      "/api/web-rca/v1/incidents/{id}/follow_ups": {
        "get": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            },
            {
              "$ref": "#/components/parameters/page"
            },
            {
              "$ref": "#/components/parameters/size"
            },
            {
              "$ref": "#/components/parameters/order_by"
            },
            {
              "$ref": "#/components/parameters/created_after"
            },
            {
              "$ref": "#/components/parameters/created_before"
            },
            {
              "$ref": "#/components/parameters/follow_up_status"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FollowUpList"
                  }
                }
              },
              "description": "A JSON array of followup objects"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get FollowUps in given Incident by Incident id"
        }
      },
      "/api/web-rca/v1/incidents/{id}/notifications": {
        "get": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            },
            {
              "$ref": "#/components/parameters/page"
            },
            {
              "$ref": "#/components/parameters/size"
            },
            {
              "$ref": "#/components/parameters/checked"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NotificationList"
                  }
                }
              },
              "description": "A JSON array of Notification objects"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get Notifications in given Incident by Incident id"
        },
        "post": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            },
            "description": "Notification data",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "description": "Created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred creating the Notification"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Create a new Notification under the Incident"
        }
      },
      "/api/web-rca/v1/incidents/{id}/retrospective": {
        "delete": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "responses": {
            "200": {
              "description": "incident retrospective successfully deleted"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No incident retrospective with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred deleting the incident retrospective"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Delete an incident retrospective"
        },
        "get": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IncidentRetrospective"
                  }
                }
              },
              "description": "Incident retrospective object"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Incident with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get the incident retrospective for the incident"
        },
        "patch": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRetrospectivePatchRequest"
                }
              }
            },
            "description": "Incident retrospective patch data",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IncidentRetrospective"
                  }
                }
              },
              "description": "Incident retrospective updated successfully"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No incident with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error updating incident retrospective"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Update an incident retrospective"
        },
        "post": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRetrospective"
                }
              }
            },
            "description": "Event data",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IncidentRetrospective"
                  }
                }
              },
              "description": "Created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred creating the incident retrospective"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Start a new incident retrospective"
        }
      },
      "/api/web-rca/v1/incidents/{id}/retrospective/restore": {
        "post": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentRetrospective"
                }
              }
            },
            "description": "Event data",
            "required": true
          },
          "responses": {
            "200": {
              "description": "Incident retrospective restored successfully"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No incident retrospective with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred restoring the incident retrospective"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Restore an incident retrospective"
        }
      },
      "/api/web-rca/v1/incidents/{id}/task_runs": {
        "get": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            },
            {
              "$ref": "#/components/parameters/page"
            },
            {
              "$ref": "#/components/parameters/size"
            },
            {
              "$ref": "#/components/parameters/order_by"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IncidentTaskRunList"
                  }
                }
              },
              "description": "A JSON array of IncidentTaskRun objects"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Incident with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get IncidentTaskRuns in given Incident by Incident id"
        }
      },
      "/api/web-rca/v1/incidents/{incident_id}/events/{event_id}/attachments": {
        "get": {
          "parameters": [
            {
              "$ref": "#/components/parameters/page"
            },
            {
              "$ref": "#/components/parameters/size"
            },
            {
              "$ref": "#/components/parameters/order_by"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AttachmentList"
                  }
                }
              },
              "description": "A JSON array of attachment objects"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get Attachments in given Event by Event id"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/incident_id"
          },
          {
            "$ref": "#/components/parameters/event_id"
          }
        ],
        "post": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Event data",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Attachment"
                  }
                }
              },
              "description": "Created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred creating the Attachment"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Create a new Attachment under the Event"
        }
      },
      "/api/web-rca/v1/incidents/{incident_id}/events/{event_id}/attachments/{id}": {
        "delete": {
          "responses": {
            "204": {
              "description": "attachment successfully deleted"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No attachment with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred deleting the attachment"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Delete an attachment"
        },
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Attachment"
                  }
                }
              },
              "description": "Attachment found by id"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return an attachment by incident id, event id, and attachment id"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/incident_id"
          },
          {
            "$ref": "#/components/parameters/event_id"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "patch": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentPatchRequest"
                }
              }
            },
            "description": "Attachment data",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Attachment"
                  }
                }
              },
              "description": "Attachment updated successfully"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No attachment with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error updating attachment"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Update an Attachment"
        }
      },
      "/api/web-rca/v1/incidents/{incident_id}/events/{id}": {
        "delete": {
          "responses": {
            "204": {
              "description": "event successfully deleted"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No event with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred deleting the event"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Delete an event"
        },
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              },
              "description": "A JSON representation of an Event object"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return an event by Incident id and Event id"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/incident_id"
          }
        ],
        "patch": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventPatchRequest"
                }
              }
            },
            "description": "Event data",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              },
              "description": "Event updated successfully"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Event with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error updating Event"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Update an Event"
        }
      },
      "/api/web-rca/v1/incidents/{incident_id}/follow_ups/{id}": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FollowUp"
                  }
                }
              },
              "description": "A JSON representation of a FollowUp object"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return a FollowUp by Incident id and FollowUp id"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/incident_id"
          }
        ],
        "patch": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowUpPatchRequest"
                }
              }
            },
            "description": "FollowUp patch data",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FollowUp"
                  }
                }
              },
              "description": "FollowUp updated successfully"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No FollowUp with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error updating FollowUp"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Update a FollowUp"
        }
      },
      "/api/web-rca/v1/incidents/{incident_id}/get_ws_auth": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WebsocketAuthToken"
                  }
                }
              },
              "description": "Temporary token to open WebSocket"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return temporary auth token to open WebSocket"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/incident_id"
          }
        ]
      },
      "/api/web-rca/v1/incidents/{incident_id}/notifications/{id}": {
        "delete": {
          "responses": {
            "204": {
              "description": "Notification successfully deleted"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Notication with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred deleting the Notification"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Delete a Notification"
        },
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "description": "A JSON array of Notification objects"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return an Notification by Incident id and Notification id"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/incident_id"
          }
        ],
        "patch": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPatchRequest"
                }
              }
            },
            "description": "Notification patch data",
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              },
              "description": "Notification updated successfully"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No Incident with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error updating Incident"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Update a Notification"
        }
      },
      "/api/web-rca/v1/incidents/{incident_id}/task_runs/{id}": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IncidentTaskRun"
                  }
                }
              },
              "description": "A JSON representation of an IncidentTaskRun object"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return an IncidentTaskRun by Incident id and IncidentTaskRun id"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/incident_id"
          }
        ]
      },
      "/api/web-rca/v1/playbooks": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PlaybookList"
                  }
                }
              },
              "description": "A JSON array or playbooks"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "summary": "Returns a list of playbooks"
        }
      },
      "/api/web-rca/v1/report": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ReportList"
                  }
                }
              },
              "description": "a JSON array of report types"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return a list of report types"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/size"
          }
        ]
      },
      "/api/web-rca/v1/report/{id}": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "text/csv": {}
              },
              "description": "Report was executed, results follow"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Report does not exist"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Execute a report by report ID"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/from"
          },
          {
            "$ref": "#/components/parameters/to"
          },
          {
            "$ref": "#/components/parameters/products"
          },
          {
            "$ref": "#/components/parameters/follow_up_status_rep"
          }
        ]
      },
      "/api/web-rca/v1/slack-state": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SlackLinkInfo"
                  }
                }
              },
              "description": "Temporary state token to compose Add to Slack link"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return temporary state token to compose Add to Slack link"
        }
      },
      "/api/web-rca/v1/users": {
        "get": {
          "parameters": [
            {
              "$ref": "#/components/parameters/page"
            },
            {
              "$ref": "#/components/parameters/size"
            },
            {
              "$ref": "#/components/parameters/order_by"
            },
            {
              "$ref": "#/components/parameters/search"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserList"
                  }
                }
              },
              "description": "A JSON array of users"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Return the list of all users in the system"
        }
      },
      "/api/web-rca/v1/users/{id}": {
        "get": {
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "description": "User found by id"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No User with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unexpected error occurred"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Get an User by id"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ]
      },
      "/api/web-rca/v1/users/{id}/slack_users": {
        "post": {
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlackUser"
                }
              }
            },
            "description": "Notification data",
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "description": "Created"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Validation errors occurred"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred creating the SlackUser"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Marry a slack id to a user id"
        }
      },
      "/api/web-rca/v1/users/{user_id}/slack_users/{id}": {
        "delete": {
          "responses": {
            "204": {
              "description": "slack user mapping successfully deleted"
            },
            "401": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Auth token is invalid"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "Unauthorized to perform operation"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "No slack user mapping with specified id exists"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              },
              "description": "An unexpected error occurred deleting the slack user mapping"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ],
          "summary": "Delete a slack user mapping"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/user_id"
          }
        ]
      }
    },
    "servers": [
      {
        "description": "Main (production) server",
        "url": "https://api.openshift.com"
      },
      {
        "description": "Staging server",
        "url": "https://api.stage.openshift.com"
      },
      {
        "description": "Local development server",
        "url": "http://localhost:8000"
      },
      {
        "description": "current domain",
        "url": "/"
      }
    ]
  }
}